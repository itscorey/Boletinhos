name: Tests

on:
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '*.md'

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Run Unit tests
        run: bash ./gradlew testDebugUnitTest --stacktrace

  development_apk:
    name: Development APK
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Assemble Development APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload Development APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev
          path: android-ui/build/outputs/apk/debug/android-ui-debug.apk

  instrumentation_tests_apk:
    name: Instrumentation Tests APK
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Assemble Instrumentation Tests APK
        run: bash ./gradlew assembleDebugAndroidTest

      - name: Upload Instrumentation Tests APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev-ui-tests
          path: android-ui/build/outputs/apk/androidTest/debug/android-ui-debug-androidTest.apk

  test_lab:
    name: Instrumentation Tests
    needs: [development_apk, instrumentation_tests_apk]
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Download Development APK
        uses: actions/download-artifact@v1
        with:
          name: app-dev

      - name: Download UI Tests APK
        uses: actions/download-artifact@v1
        with:
          name: app-dev-ui-tests

      - name: Authenticate into GCloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.FIREBASE_ADMIN_SERVICE_KEY }}

      - name: Configure GCloud project ID
        run: gcloud config set project $FIREBASE_PROJECT_ID
        env:
          FIREBASE_PROJECT_ID: boletinhos-5b614

      - name: Run Instrumentation Tests
        run: >
          gcloud firebase test android run --type instrumentation
          --app app-dev/android-ui-debug.apk
          --test app-dev-ui-tests/android-ui-debug-androidTest.apk
          --device model=Pixel2,version=28,locale=en_US,orientation=portrait
          --no-use-orchestrator
          --environment-variables coverage=true,coverageFile="/sdcard/coverage.ec"
          --directories-to-pull=/sdcard

      - name: Create Firebase directory in workspace
        run: mkdir firebase

      - name: Download Firebase Test Lab code coverage
        run: >
          gsutil -m cp -r -U "`gsutil ls gs://test-lab-dxpqby473161q-hj2c770js967m | tail -1`*" $GITHUB_WORKSPACE/firebase/

      - name: Upload Firebase Test Lab code coverage
        uses: actions/upload-artifact@v1
        with:
          name: firebase
          path: firebase/