import config.AppConfig
import config.Androidx
import config.DI
import config.Kotlinx
import config.Testing
import config.Tools

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.adarshr.test-logger'


androidExtensions {
    features = ["parcelize"]
}

android {
    compileSdkVersion AppConfig.Sdk.compile

    defaultConfig {
        minSdkVersion AppConfig.Sdk.min
        targetSdkVersion AppConfig.Sdk.target

        versionCode AppConfig.Version.code
        versionName AppConfig.Version.toString()

        testInstrumentationRunner AppConfig.testRunner

        // Needed to use Java 8 desugaring with minSdk below 20
        // Maybe I should go up to minSdk 21? ðŸ˜¢ðŸ˜’
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8

        // ...
        freeCompilerArgs += [
            "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"
        ]
    }
}

dependencies {
    coreLibraryDesugaring(Tools.desugaring)

    implementation project(":domain")

    implementation(Androidx.appCompat)
    implementation(Kotlinx.stbLib, Kotlinx.Coroutines.android)

    implementation(Androidx.Room.core)
    kapt(Androidx.Room.compiler)

    implementation(DI.dagger)
    kapt(DI.compiler)

    testImplementation(Testing.junit, Testing.assertK, Testing.robolectric)
    testImplementation(Androidx.Room.testing, Androidx.Testing.core)
    testImplementation(Kotlinx.Coroutines.test)
}

kapt {
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas")
    }
}