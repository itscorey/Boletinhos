apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def exclusions = [
        'android/**/*.*',
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        '**/*Module.*',
        '**/*Module$Companion.*',
        '**/*Dagger*.*',
        '**/*MembersInjector*.*',
        '**/*_Provide*Factory*.*',
        '**/*_Factory.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory$InstanceHolder.*',
        '**/injection/*',
        '**/di/*'
    ]

    def filesTree = fileTree(
        dir: "$project.buildDir/intermediates/javac/debug",
        excludes: exclusions
    )

    def kotlinFilesTree = fileTree(
        dir: "${buildDir}/tmp/kotlin-classes/debug",
        excludes: exclusions
    )

    sourceDirectories.from = files(["$project.projectDir/src/main/java"])

    classDirectories.from = files([filesTree], [kotlinFilesTree])

    executionData.from = fileTree(
        dir: project.buildDir,
        includes: [
            'jacoco/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
        ]
    )
}